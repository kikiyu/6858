## Place your answers here.
exercise 2
exploit-2a.py bug1 http.c:159
Pass a header longer than 512 bytes. This overflows value in http_request_headers,
and also return address of http_request_headers.

exploit-2b.py bug3 http.c:282
Pass a request path longer than 1024 and overwrite handler in process_client

exercise 3
This exploits bug3, which overwrite value of handler. Other bugs can accomplish
this by overwrite return address in the stack.

exercise 4
Except bug4, all bugs works for this exercise. The reason is that the variable 
that was overwritten in bug4 is not on its stack.

exercise 5
1. In http_serve_file, there is no access control check. If pn is /../.., then 
files in the root directory may be accessed.
Sol: have an access control check on pn explicitly.

2. In http_read_line, read() will block if the http request is without a newline 
character. In this case, zookd will stop accepting new requests, and result in an
DOS attack.
Sol: fork a new thread to perform read().
